// <auto-generated />
using System;
using CityBreaks.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityBreaks.Web.Migrations
{
    [DbContext(typeof(CityBreaksContext))]
    [Migration("20250609000703_GetAllActiveMigration")]
    partial class GetAllActiveMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("CityBreaks.Web.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("CityName");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Lisboa"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Porto"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "Madrid"
                        });
                });

            modelBuilder.Entity("CityBreaks.Web.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("CountryCode");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("CountryName");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryCode = "PT",
                            CountryName = "Portugal"
                        },
                        new
                        {
                            Id = 2,
                            CountryCode = "ES",
                            CountryName = "Espanha"
                        });
                });

            modelBuilder.Entity("CityBreaks.Web.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT")
                        .HasColumnName("PropertyName");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("TEXT")
                        .HasColumnName("PricePerNight");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Casa Alfama",
                            PricePerNight = 85.50m
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            Name = "Ribeira Flat",
                            PricePerNight = 70.00m
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            Name = "Gran Via Loft",
                            PricePerNight = 120.00m
                        });
                });

            modelBuilder.Entity("CityBreaks.Web.Models.City", b =>
                {
                    b.HasOne("CityBreaks.Web.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CityBreaks.Web.Models.Property", b =>
                {
                    b.HasOne("CityBreaks.Web.Models.City", "City")
                        .WithMany("Properties")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityBreaks.Web.Models.City", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
